//*************************************
//
//　Manager[manager.cpp]
//　Author:Hatori Kensaku
//
//*************************************

// インクルード
#include "manager.h"
#include "renderer.h"
#include "debugproc.h"
#include "object3D.h"
#include "object2D.h"
#include "objectX.h"

// 名前空間
using namespace std;

// 静的メンバ変数宣言
CRenderer* CManager::m_Renderer = NULL;
CInputKeyboard* CManager::m_pInputKeyboard = NULL;
CInputJoypad* CManager::m_pInputJoypad = NULL;
CInputMouse* CManager::m_pInputMouse = NULL;
CSound* CManager::m_pSound = NULL;
CCamera* CManager::m_pCamera = NULL;
CLight* CManager::m_pLight = NULL;
CPlayer* CManager::m_pPlayer = NULL;
bool CManager::m_isPause = false;
bool CManager::m_isClear = false;

//***************************************
// コンストラクタ
//***************************************
CManager::CManager()
{
}

//***************************************
// デストラクタ
//***************************************
CManager::~CManager()
{

}

//***************************************
// 初期化処理
//***************************************
HRESULT CManager::Init(HINSTANCE hInstance, HWND hWnd, bool bWnd)
{
	HRESULT hr;

	// 静的メンバ変数の一部をメモリ確保
	m_Renderer = new CRenderer;
	m_pInputKeyboard = new CInputKeyboard;
	m_pInputJoypad = new CInputJoypad;
	m_pInputMouse = new CInputMouse;
	m_pSound = new CSound;
	m_pCamera = new CCamera;
	m_pLight = new CLight;

	// メモリ確保できたら
	if (m_Renderer != NULL)
	{
		// 初期化処理
		hr = m_Renderer->Init(hWnd, bWnd);
	}

	// メモリ確保できたら
	if (m_pInputKeyboard != NULL)
	{
		// 初期化処理
		hr = m_pInputKeyboard->Init(hInstance, hWnd);
	}
	// メモリ確保できたら
	if (m_pInputJoypad != NULL)
	{
		// 初期化処理
		hr = m_pInputJoypad->Init(hInstance, hWnd);
	}
	// メモリ確保できたら
	if (m_pInputMouse != NULL)
	{
		// 初期化処理
		hr = m_pInputMouse->Init(hInstance, hWnd);
	}
	// メモリ確保できたら
	if (m_pSound != NULL)
	{
		// 初期化処理
		hr = m_pSound->Init(hWnd);
	}

	// ３Dに必要なものを初期化
	m_pCamera->Init();
	m_pLight->Init();

	CObject3D::Create(VEC3_NULL, VEC3_NULL);
	//CObjectX::Create(VEC3_NULL, VEC3_NULL, "data\\MODEL\\ie.x");
	m_pPlayer->Create(VEC3_NULL, VEC3_NULL);
	return S_OK;
}

//***************************************
// 終了処理
//***************************************
void CManager::Uninit()
{
	// カメラが使われていたら
	if (m_pCamera != NULL)
	{
		m_pCamera->Uninit();
		delete m_pCamera;
		m_pCamera = NULL;
	}

	// レンダラークラスが使われていたら
	if (m_Renderer != NULL)
	{
		m_Renderer->Uninit();
		delete m_Renderer;
		m_Renderer = NULL;
	}

	// キーボードが使われていたら
	if (m_pInputKeyboard != NULL)
	{
		m_pInputKeyboard->Uninit();
		delete m_pInputKeyboard;
		m_pInputKeyboard = NULL;
	}
	// ゲームパッドが使われていたら
	if (m_pInputJoypad != NULL)
	{
		m_pInputJoypad->Uninit();
		delete m_pInputJoypad;
		m_pInputJoypad = NULL;
	}
	// Mouseが使われていたら
	if (m_pInputMouse != NULL)
	{
		m_pInputMouse->Uninit();
		delete m_pInputMouse;
		m_pInputMouse = NULL;
	}

	// サウンドクラスが使われていたら
	if (m_pSound != NULL)
	{
		m_pSound->Uninit();
		delete m_pSound;
		m_pSound = NULL;
	}

	// ライトが使われていたら
	if (m_pLight != NULL)
	{
		m_pLight->Uninit();
		delete m_pLight;
		m_pLight = NULL;
	}

	// テクスチャマネージャーの破棄
	CTextureManager::Instance()->Unload();

	// モデルマネージャーの破棄
	CModelManager::Instance()->Unload();
}

//***************************************
// 更新処理
//***************************************
void CManager::Update()
{
	// カメラのアップデート
	m_pCamera->Update();

	// ライトのアップデート
	m_pLight->Update();

	if (m_isPause == false)
	{
		if (m_Renderer != NULL)
		{
			m_Renderer->Update();
		}
	}

	// キーボードが使われていたら更新
	if (m_pInputKeyboard != NULL)
	{
		m_pInputKeyboard->Update();
	}
	// ゲームパッドが使われていたら更新
	if (m_pInputJoypad != NULL)
	{
		m_pInputJoypad->Update();
	}
	// Mouseが使われていたら更新
	if (m_pInputMouse != NULL)
	{
		m_pInputMouse->Update();
	}
}

//***************************************
// 描画処理
//***************************************
void CManager::Draw()
{
	if (m_Renderer != NULL)
	{
		m_Renderer->Draw();
	}
}

//***************************************
// プレイヤーのリスポーン
//***************************************
void CManager::RespawPlayer(void)
{
}