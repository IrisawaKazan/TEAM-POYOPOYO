//****************************************************************
//
// マップマネージャーの処理[mapmanager.h]
// Author Kensaku Hatori
//
//****************************************************************

// 二重インクルード防止
#ifndef _MAPMANAGER_H_
#define _MAPMANAGER_H_

// 前方宣言
class CBlock;
class CSwitch;

// クラスを定義
class CMapManager
{
public:
	// デストラクタ
	~CMapManager() { m_vMapObject.clear(); }

	// メンバ関数
	HRESULT Init(void);
	void Uninit(void);
	void Update(void);
	void Draw(void);

	// 生成
	void CreateObject(D3DXVECTOR3 Pos, D3DXVECTOR3 Rot, std::string Path);

	// 読み込み
	void Load(std::string Path);

	// 静的メンバ関数
	// シングルトン
	static CMapManager* Instance(void) {
		static std::unique_ptr<CMapManager> Instance(new CMapManager);
		return Instance.get();
	};
private:
	// コンストラクタ
	CMapManager() { Init(); }
	// メンバ変数
	std::vector<CBlock*> m_vMapObject;			// マップに置くオブジェクト
	std::vector<CSwitch*> m_vMapSwitch;			// マップに置くスイッチ
};

#endif // !_MAPMANAGER_H_