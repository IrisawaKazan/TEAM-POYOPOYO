//****************************************************************
//
// チュートリアルの処理
// Author:Takahashi Misaki
//
//****************************************************************

// インクルード
#include "tutorial.h"

//***************************************
// コンストラクタ
//***************************************
CTutorial::CTutorial()
{
	m_type = TUTORIAL_NOEN;	// チュートリアルの種類
	m_fWidth = 0.0f;		// 横幅
	m_fHeigth = 0.0f;		// 縦幅
}

//***************************************
// デストラクタ
//***************************************
CTutorial::~CTutorial()
{
}

//***************************************
// 初期化処理
//***************************************
HRESULT CTutorial::Init(void)
{
	m_type = TUTORIAL_NOEN;	// タイプをなしに設定
	m_fWidth = 0.0f;		// 横幅
	m_fHeigth = 0.0f;		// 縦幅

	return S_OK;
}

//***************************************
// 終了処理
//***************************************
void CTutorial::Uninit(void)
{
}

//***************************************
// 更新処理
//***************************************
void CTutorial::Update(void)
{
	// チュートリアルがなしじゃなかったら
	if (m_type != TUTORIAL_NOEN)
	{
		// 設定したチュートリアルの更新をする
		switch (m_type)
		{
			// 奥に進む指示の場合
		case TUTORIAL_BACK:


			break;

			// 右に進む指示の場合
		case TUTORIAL_RIGHT:


			break;

			// 手前に進む指示の場合
		case TUTORIAL_FRONT:


			break;

			// 左に進む指示の場合
		case TUTORIAL_LEFT:


			break;

			// ジャンプする指示の場合
		case TUTORIAL_JUMP:


			break;

			// 壁をよじ登る指示の場合
		case TUTORIAL_CLIMB:


			break;

		}
	}

}

//***************************************
// 描画処理
//***************************************
void CTutorial::Draw(void)
{


}

//***************************************
// チュートリアルの設定処理
//***************************************
void CTutorial::SetTutorial(const TUTORIAL type)
{
	// 設定したチュートリアルに変更
	m_type = type;
}
